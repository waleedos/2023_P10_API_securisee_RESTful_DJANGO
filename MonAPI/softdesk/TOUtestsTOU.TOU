from django.test import TestCase
from .models import User
from rest_framework.test import APITestCase
from rest_framework import status


# Test de création d'utilisateur
class UserTestCase(TestCase):
    def setUp(self):
        User.objects.create_user(username="testuser", password="testpassword", age=20)  # <-- Ici

    def test_user_creation(self):
        user = User.objects.get(username="testuser")
        self.assertEqual(user.username, 'testuser')


# Test d'authentification
class AuthenticationTestCase(APITestCase):
    def setUp(self):
        self.user = User.objects.create_user(username='testuser', password='testpassword', age=20)  # Utilisation de create_user

    def test_authentication(self):
        data = {"username": "testuser", "password": "testpassword"}
        response = self.client.post("/api/token/", data)
        print("Content for Authentication Test:", response.content)
        self.assertEqual(response.status_code, status.HTTP_200_OK)


# Test de création de projet
class ProjectTestCase(APITestCase):
    def setUp(self):
        self.user = User.objects.create_user(username='testuser', password='testpassword', age=20)
        self.client.force_authenticate(user=self.user)

    def test_create_project(self):
        data = {
            "name": "Test Project",
            "description": "Test Description",
            "type": "back-end",
            "author": self.user.id  # Ajout du champ author
        }
        response = self.client.post("/api/projects/", data)  # Assurez-vous que l'URL est correcte
        print("Content for Project Creation Test:", response.content)
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
